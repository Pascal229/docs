"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[60906],{16217:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=t(11527),a=t(17279);const i={sidebar_position:10},o="\ud83e\udd16 I18n translation with CLI",r={id:"docs/references/translate-cli/README",title:"\ud83e\udd16 I18n translation with CLI",description:"Logto translate CLI is a powerful tool designed for developers contributing to Logto's i18n efforts. With this CLI, you can focus on writing content in English, and then easily translate it into all supported languages.",source:"@site/docs/docs/references/translate-cli/README.mdx",sourceDirName:"docs/references/translate-cli",slug:"/docs/references/translate-cli/",permalink:"/docs/references/translate-cli/",draft:!1,unlisted:!1,editUrl:"https://github.com/logto-io/docs/tree/master/docs/docs/references/translate-cli/README.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"docsSidebar",previous:{title:"Custom data",permalink:"/docs/references/users/custom-data"},next:{title:"\ud83e\udd16 Using Logto Tunnel CLI",permalink:"/docs/references/tunnel-cli/"}},l={},c=[{value:"Migrate from <code>@logto/cli</code>",id:"migrate-from-logtocli",level:2},{value:"Sync keys",id:"sync-keys",level:2},{value:"Translate keys using ChatGPT",id:"translate-keys-using-chatgpt",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"-i18n-translation-with-cli",children:"\ud83e\udd16 I18n translation with CLI"}),"\n",(0,s.jsx)(n.p,{children:"Logto translate CLI is a powerful tool designed for developers contributing to Logto's i18n efforts. With this CLI, you can focus on writing content in English, and then easily translate it into all supported languages."}),"\n",(0,s.jsxs)(n.p,{children:["For regular Logto users seeking custom translations without contributing to the project, please refer to our ",(0,s.jsx)(n.a,{href:"/docs/recipes/customize-sie/localized-language/",children:"localization guide"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Started from v1.20.0, the translation command is removed from the ",(0,s.jsx)(n.code,{children:"@logto/cli"}),", and maintained as a standalone ",(0,s.jsx)(n.code,{children:"@logto/translation"})," package in the logto monorepo. Accordingly, the way of execution is slightly different."]})}),"\n",(0,s.jsxs)(n.h2,{id:"migrate-from-logtocli",children:["Migrate from ",(0,s.jsx)(n.code,{children:"@logto/cli"})]}),"\n",(0,s.jsx)(n.p,{children:"Here's a comparison of the old and new CLI execution methods:"}),"\n",(0,s.jsx)(n.p,{children:"Old method (before v1.20.0):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm cli translate <command> [options]\n"})}),"\n",(0,s.jsx)(n.p,{children:"New method:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm translate <command> [options]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"sync-keys",children:"Sync keys"}),"\n",(0,s.jsxs)(n.p,{children:["Let's say we made some changes to the translation keys in the ",(0,s.jsx)(n.code,{children:"en"})," folder of the ",(0,s.jsx)(n.code,{children:"phrases"})," package. We want to sync these changes to the ",(0,s.jsx)(n.code,{children:"pt-BR"})," folder. Run the command below to sync translation keys and file structure:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm translate sync-keys --target pt-BR\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This command will read all translation keys from the source language folder (",(0,s.jsx)(n.code,{children:"en"})," by default) and sync them to the target language folder (",(0,s.jsx)(n.code,{children:"pt-BR"})," in this example)."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If the target language folder doesn't exist, it will be created automatically;"}),"\n",(0,s.jsx)(n.li,{children:"If the target language folder already exists, it will be updated with new keys and removed with obsolete keys."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For each translation key:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If a key is missing in the target, it will be added with a comment to indicate that the phrase is untranslated (marked with ",(0,s.jsx)(n.code,{children:"/** UNTRANSLATED */"}),");"]}),"\n",(0,s.jsx)(n.li,{children:"If a key is missing in the baseline, it will be removed from the target;"}),"\n",(0,s.jsx)(n.li,{children:"If a key exists in both the baseline and the target, the value of the target will be used."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To sync keys for all languages in the ",(0,s.jsx)(n.code,{children:"phrases"})," package, run the command below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm translate sync-keys --target all\n"})}),"\n",(0,s.jsx)(n.p,{children:"Thus we can focusing on updating the translation keys in the source language folder, and the translation keys in other languages will be updated automatically."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This command executes for ",(0,s.jsx)(n.code,{children:"phrases"})," package by default. You can specify the package name by ",(0,s.jsx)(n.code,{children:"--package"})," option. For example, use ",(0,s.jsx)(n.code,{children:"--package phrases-experience"})," to sync keys for the ",(0,s.jsx)(n.code,{children:"phrases-experience"})," package."]})}),"\n",(0,s.jsx)(n.p,{children:"After syncing keys, we can translate the keys using ChatGPT API."}),"\n",(0,s.jsx)(n.h2,{id:"translate-keys-using-chatgpt",children:"Translate keys using ChatGPT"}),"\n",(0,s.jsx)(n.p,{children:"Run the command below to translate keys using ChatGPT:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm translate sync\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This command will translate all untranslated keys (marked with ",(0,s.jsx)(n.code,{children:"/** UNTRANSLATED */"}),") across all languages in the ",(0,s.jsx)(n.code,{children:"phrases"})," and ",(0,s.jsx)(n.code,{children:"phrases-experience"})," packages. Note an environment variable ",(0,s.jsx)(n.code,{children:"OPENAI_API_KEY"})," is required to run this command."]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},17279:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var s=t(50959);const a={},i=s.createContext(a);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);