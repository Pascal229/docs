"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[99009],{27395:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docs/references/sdk-convention/README","title":"\ud83d\udcc3 SDK convention","description":"This section demonstrates SDK functionalities provided by Logto and the convention between various languages and platforms.","source":"@site/docs/docs/references/sdk-convention/README.md","sourceDirName":"docs/references/sdk-convention","slug":"/docs/references/sdk-convention/","permalink":"/docs/references/sdk-convention/","draft":false,"unlisted":false,"editUrl":"https://github.com/logto-io/docs/tree/master/docs/docs/references/sdk-convention/README.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"docsSidebar","previous":{"title":"\ud83d\udcc1 API Resource","permalink":"/docs/references/resources/"},"next":{"title":"Design strategy","permalink":"/docs/references/sdk-convention/design-strategy"}}');var t=o(86070),r=o(15658);const c={sidebar_position:8},i="\ud83d\udcc3 SDK convention",d={},a=[];function l(e){const n={a:"a",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-sdk-convention",children:"\ud83d\udcc3 SDK convention"})}),"\n",(0,t.jsx)(n.p,{children:"This section demonstrates SDK functionalities provided by Logto and the convention between various languages and platforms."}),"\n",(0,t.jsx)(n.p,{children:"This convention contains three main parts:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/references/sdk-convention/design-strategy",children:"Design strategy"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/references/sdk-convention/core-sdk-convention",children:"Core SDK convention"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/references/sdk-convention/platform-sdk-convention",children:"Platform SDK convention"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},15658:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>i});var s=o(30758);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);